function getTodayDate():
    return current date in format "DD/MM/YYYY"

class StockListStreamer:
    constructor():
        self.stockList = {}

    async streamData():
        token = "Bearer " + await getAccessToken()
        initialize data stream with:
            url = ssi.HubUrl
            token = token
        bind onData event handler:
            function onData(message):
                try:
                    parsed_content = parse JSON from message
                    if parsed_content.Symbol:
                        modifyStockList(self.stockList, parsed_content, getTodayDate())
                        emit "stockAdded" event with parsed_content.Symbol
                        emit "stockListUpdated" event with self.stockList
                except error:
                    log error message
        start the data stream

function modifyStockList(stockList, parsedContent, todayDate):
    if parsedContent.TradingDate != todayDate:
        return  
    if parsedContent.Symbol not in stockList:
        stockList[parsedContent.Symbol] = []
    current_time = get current time in "HH:MM" format
    for each data point in stockList[parsedContent.Symbol]:
        if difference in minutes between current_time and data point time > 5:
            remove data point from stockList[parsedContent.Symbol]
    add parsedContent to stockList[parsedContent.Symbol]